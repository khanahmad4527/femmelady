steps:
  # 1Ô∏è‚É£ Build Docker image using BuildKit for optimization
  - name: gcr.io/cloud-builders/docker
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        export DOCKER_BUILDKIT=1
        docker build -t ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REGISTRY_REPO}/${_SERVICE_NAME}:$SHORT_SHA -f Dockerfile .
    secretEnv: ['USERNAME', 'PASSWORD']

  # 2Ô∏è‚É£ Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REGISTRY_REPO}/${_SERVICE_NAME}:$SHORT_SHA'
      ]

  # 3Ô∏è‚É£ Deploy the new version to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
        'run',
        'deploy',
        '${_SERVICE_NAME}',
        '--image',
        '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REGISTRY_REPO}/${_SERVICE_NAME}:$SHORT_SHA',
        '--region',
        '${_REGION}',
        '--platform',
        'managed',
        '--port=3000', # <-- Tell Cloud Run to use port 3000
        '--allow-unauthenticated',
        '${_MIN_INSTANCES}', # üîÑ Keeps at least 1 instance running (prevents cold starts)
        '${_MAX_INSTANCES}' # üöÄ Auto-scales up to 3 instances if needed
      ]

options:
  logging: CLOUD_LOGGING_ONLY # üìú Log to Cloud Logging only (no local logs)

serviceAccount: '${_SERVICE_ACCOUNT}' # üõ†Ô∏è IAM Service Account for deployment

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/UNTHAA_DIRECTUS_URL/versions/latest
      env: 'DIRECTUS_URL'
    - versionName: projects/$PROJECT_ID/secrets/UNTHAA_REDIS_URL/versions/latest
      env: 'REDIS_URL'
